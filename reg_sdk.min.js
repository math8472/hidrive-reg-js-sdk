var HD_REG = function () { "use strict"; var b, c, d, e, f, g, h, i, a = "0.0.1", j = { productName: null, product: null, partnerId: null, partnerRefId: null, partnerSubId: null }; return c = function (a, b, c, d) { var f, g, e = i(); e.onreadystatechange = function () { e._canceled || (4 === e.readyState ? (e.status >= 200 && 300 > e.status ? b(e) : c(e), e.onreadystatechange = function () { }) : d && d(e)) }, e.open(a.type || "GET", a.url, !0, a.user, a.password), e.responseType = a.responseType || "", f = { "Content-Type": "application/x-www-form-urlencoded" }, a.headers = a.headers || f, Object.keys(a.headers || {}).forEach(function (b) { e.setRequestHeader(b, a.headers[b]) }), g = "postdata=", a.data && (g += JSON.stringify(a.data)), e.send(g) }, d = function () { return "https://www.free-hidrive.com/order" }, h = function (a, b) { return Object.prototype.hasOwnProperty.call(a, b) }, g = function (a) { var b; if (!a) return j; if ("[object String]" === Object.prototype.toString.call(a)) return h(j, a) ? j[a] : null; for (b in j) j.hasOwnProperty(b) && h(j, b) && h(a, b) && (j[b] = a[b]) }, b = function (a) { var b = d(); return b += a }, e = function (a, d, e, f, g) { var h; h = b(a), c({ type: "POST", url: h, data: d }, function (a) { if (200 === a.status || 201 === a.status || 204 === a.status) { var b = a.responseText; try { b = JSON.parse(b) } catch (c) { } finally { e(b) } } else f(a) }, function (a) { var b = a.responseText; try { b = JSON.parse(b), b.status = a.status } catch (c) { } f(b) }, g()) }, f = function (a, b, c, d) { e("/check_username", { username: a.username, country: a.country, language: a.language, product_name: g("productName"), product: g("product"), partner_id: g("partnerId"), partner_ref_id: g("partnerRefId"), partner_sub_id: g("partnerSubId") }, function (f) { f && f.data ? 0 === f.data.return_code ? e("/check_email", { email: a.email, country: a.country, language: a.language, product_name: g("productName"), product: g("product"), partner_id: g("partnerId"), partner_ref_id: g("partnerRefId"), partner_sub_id: g("partnerSubId") }, function (f) { f && f.data ? 0 === f.data.return_code ? e("/post_data", { data_values: { agb_check: a.agbcheck, email: a.email, username: a.username, password: a.password, country: a.country, language: a.language, captcha_number: a.captcha, product_name: g("productName"), product: g("product"), partner_id: g("partnerId"), partner_ref_id: g("partnerRefId"), partner_sub_id: g("partnerSubId") }, country: a.country, language: a.language, product_name: g("productName"), product: g("product") }, function (a) { a && a.data && 0 === a.data.return_code ? b(a) : a && a.data && 2 === a.data.return_code ? c({ error: "common-error" }) : c({ error: "error-summary", errors: a.data.errors }) }, function (a) { a && a.data && 1 === a.data.return_code ? c({ error: "common-error" }) : c({ error: "common-error" }) }, d) : 1001 === f.data.return_code ? c({ error: "email-exists" }) : c({ error: "email-invalid" }) : c({ error: "email-invalid" }) }, function (a) { a && a.data && 1 === a.data.return_code ? c({ error: "email-exists" }) : c({ error: "common-error" }) }, d) : f.data.errors && f.data.errors.length > 0 ? c({ error: "username-invalid" }) : c({ error: "username-exists" }) : c({ error: "common-error" }) }, function (a) { a && a.data && 1 === a.data.return_code ? c({ error: "username-exists" }) : c({ error: "common-error" }) }, d) }, i = function () { try { return new XMLHttpRequest } catch (a) { throw Error("Browser is not CORS capable") } }, { options: g, getOrderApiUrl: d, version: a, post: e, order: f, getFullUrl: b } }();